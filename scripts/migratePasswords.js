/**
 * Script para migrar contrase√±as de SHA2 a bcrypt
 * Ejecutar una sola vez despu√©s de implementar el sistema de autenticaci√≥n
 */

require('dotenv').config();
const db = require('../database');
const { hashPassword } = require('../utils/authUtils');

async function migratePasswords() {
    console.log('üîÑ Iniciando migraci√≥n de contrase√±as...');
    
    try {
        // Obtener todos los usuarios con contrase√±as SHA2
        const [users] = await db.execute(`
            SELECT id, email, password_hash 
            FROM usuarios 
            WHERE password_hash IS NOT NULL 
            AND password_hash != ''
        `);
        
        console.log(`üìä Encontrados ${users.length} usuarios para migrar`);
        
        let migrated = 0;
        let errors = 0;
        
        for (const user of users) {
            try {
                // Verificar si ya es un hash bcrypt (empieza con $2b$)
                if (user.password_hash.startsWith('$2b$')) {
                    console.log(`‚è≠Ô∏è  Usuario ${user.email} ya tiene contrase√±a bcrypt, saltando...`);
                    continue;
                }
                
                // Para usuarios existentes, necesitamos una contrase√±a temporal
                // En producci√≥n, deber√≠as pedir al usuario que resetee su contrase√±a
                const tempPassword = `temp_${user.id}_${Date.now()}`;
                const hashedPassword = await hashPassword(tempPassword);
                
                // Actualizar la contrase√±a
                await db.execute(
                    'UPDATE usuarios SET password_hash = ? WHERE id = ?',
                    [hashedPassword, user.id]
                );
                
                console.log(`‚úÖ Usuario ${user.email} migrado (ID: ${user.id})`);
                console.log(`   Contrase√±a temporal: ${tempPassword}`);
                console.log(`   ‚ö†Ô∏è  IMPORTANTE: El usuario debe cambiar su contrase√±a en el pr√≥ximo login`);
                
                migrated++;
                
            } catch (error) {
                console.error(`‚ùå Error migrando usuario ${user.email}:`, error.message);
                errors++;
            }
        }
        
        console.log('\nüìà Resumen de migraci√≥n:');
        console.log(`‚úÖ Usuarios migrados: ${migrated}`);
        console.log(`‚ùå Errores: ${errors}`);
        console.log(`üìä Total procesados: ${users.length}`);
        
        if (migrated > 0) {
            console.log('\n‚ö†Ô∏è  IMPORTANTE:');
            console.log('1. Los usuarios migrados tienen contrase√±as temporales');
            console.log('2. Deben cambiar su contrase√±a en el pr√≥ximo login');
            console.log('3. Considera enviar emails de notificaci√≥n');
            console.log('4. En producci√≥n, implementa un sistema de reset de contrase√±a');
        }
        
    } catch (error) {
        console.error('üí• Error en la migraci√≥n:', error);
    } finally {
        // Cerrar conexi√≥n
        await db.end();
        console.log('üîö Migraci√≥n completada');
        process.exit(0);
    }
}

// Ejecutar migraci√≥n
migratePasswords();
